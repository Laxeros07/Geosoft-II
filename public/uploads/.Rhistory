pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- sd(pm10_smpl)/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
pm10_smpl <- sample(pm10$VMUE, 5)
n <- 5
m <- mean(pm10_smpl)
SE <- 14.9/sqrt(5)
KI_99 <- c(m + qt(0.005, n-1) * SE, m + qt(0.995, n-1) * SE)
KI_99
(KI_99[2] - KI_99[1]) / 2
m
View(stichprobe)
pts = spsample(demstd, 60, "regular")
plot(demstd)
points(pts, pch=3, col="white", lwd=2)
stichprobe <- over(pts, demstd)
m <- mean(stichprobe$band1)
SE <- sd(demstd$band1) / sqrt(60)
KI_90 <- c(qnorm(p = 0.05, mean = m, sd = SE), qnorm(p = 0.95, mean = m, sd = SE))
KI_95 <- c(qnorm(p = 0.025, mean = m, sd = SE), qnorm(p = 0.975, mean = m, sd = SE))
KI_90
m
pts = spsample(demstd, 60, "regular")
plot(demstd)
points(pts, pch=3, col="white", lwd=2)
stichprobe <- over(pts, demstd)
m <- mean(stichprobe$band1)
SE <- sd(demstd$band1) / sqrt(60)
KI_90 <- c(qnorm(p = 0.05, mean = m, sd = SE), qnorm(p = 0.95, mean = m, sd = SE))
KI_95 <- c(qnorm(p = 0.025, mean = m, sd = SE), qnorm(p = 0.975, mean = m, sd = SE))
m
?qt
mean(pm10)
mean(pm10$VMUE)
sd(pm10$VMUE)/sqrt(2016)
c(qt(0.025,pm10$VMUE), qt(0.975,pm10$VMUE))
c(qt(0.025,2015), qt(0.975,2015))
t0 <- (m-23)/SE
t0
?t.test
t.test(pm10$VMUE, "two.sided", 23)
t.test(pm10$VMUE, "two.sided", mu=23)
t.test(x=pm10$VMUE, mu=23)
c(qt(20150.025), qt(2015,0.975))
c(qt(2015, 0.25), qt(2015,0.975))
t.test(x=pm10$VMUE, mu=23, conf.level=95)
t.test(x=pm10$VMUE, mu=23, conf.level=0.95)
c(qt(0.025,2015), qt(0.975,2015))
m <- mean(pm10$VMUE)
SE <- sd(pm10$VMUE)/sqrt(2016)
t0 <- (m-23)/SE
?Qt
?qt
c(qt(0.025,2015), qt(0.975,2015))
t.test(pm10$VMUE ,mu = 35, alternative = "less", conf.level = 0.95)
t.test(iris$Sepal.Length ,mu = 6, alternative = "greater", conf.level = 0.95)
pm10 = read.csv("pm10.txt", header = T, sep = "")
t.test(pm10$VMUE, pm10$VMSS, var.equal = TRUE, conf.level = 0.95)
?t.test
pm10.diff <- pm10$VMUE - pm10$VMSS
t.test(pm10.diff, var.equal = TRUE, conf.level = 0.95)
t.test(pm10.diff, conf.level = 0.95)
t.test(pm10$VMUE, pm10$VMSS, paired = T, var.equal = TRUE, conf.level = 0.95)
t.test(pm10.diff, paired = T, conf.level = 0.95)
x1 = pm10$VMUE
x2 = pm10$VMSS
m1 = mean(x1)
m2 = mean(x2)
delta = m1 - m2
var1 = var(x1)
var2 = var(x2)
n1 = length(x1)
n2 = length(x2)
v = ((n1 - 1) * var1 + (n2 - 1) * var2)/(n1 + n2 - 2)
sp = sqrt(v)
sp
delta
SE  = sp * sqrt(1/n1 + 1/n2)
pm10 = read.csv("pm10.txt", header = T, sep = "")
SE
?power.t.test
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = sd.pooled, power = NULL, alternative = "two.sided",
= "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = NULL, power = sd.pooled, alternative = "two.sided",
= "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = NULL, power = sd.pooled, alternative = "two.sided",
type = "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = sd.pooled, power = NULL, alternative = "two.sided",
type = "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = NULL, power = NULL, alternative = "two.sided",
type = "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = SE, power = NULL, alternative = "two.sided",
type = "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, power = NULL, alternative = "two.sided",
type = "two.sample")
?sd.pooled
??sd.pooled
x1 = pm10$VMUE
x2 = pm10$VMSS
m1 = mean(x1)
m2 = mean(x2)
delta = m1 - m2
var1 = var(x1)
var2 = var(x2)
n1 = length(x1)
n2 = length(x2)
v = ((n1 - 1) * var1 + (n2 - 1) * var2)/(n1 + n2 - 2)
sp.pooled = sqrt(v)
sp.pooled
delta
SE  = sp * sqrt(1/n1 + 1/n2)
SE
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = sd.pooled, power = NULL, alternative = "two.sided",
type = "two.sample")
sd.pooled
x1 = pm10$VMUE
x2 = pm10$VMSS
m1 = mean(x1)
m2 = mean(x2)
delta = m1 - m2
var1 = var(x1)
var2 = var(x2)
n1 = length(x1)
n2 = length(x2)
v = ((n1 - 1) * var1 + (n2 - 1) * var2)/(n1 + n2 - 2)
sd.pooled = sqrt(v)
sd.pooled
delta
SE  = sp * sqrt(1/n1 + 1/n2)
SE
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = 2016, sd = sd.pooled, power = NULL, alternative = "two.sided",
type = "two.sample")
power.t.test(delta = mean(pm10$VMSS) - mean(pm10$VMUE), sig.level = 0.05,
n = NULL, sd = sd.pooled, power = 0.95, alternative = "two.sided",
type = "two.sample")
tabelle1
load("tabelle1.rdata")
View(tabelle1)
pm10.grouped = data.frame(PM10 = c(pm10[[1]], pm10[[2]]),
station = rep(c("VMUE", "VMSS"),
each = length(pm10[[1]])))
View(pm10.grouped)
load("pm10short.rdata")
View(pm10short)
mean(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))
c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3)
c(mean(tabelle1$gruppe.1), mean(tabelle1$gruppe.2),mean(tabelle1$gruppe.3))
mg <- mean(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))
m1 <- mean(tabelle1$gruppe.1)
m2 <- mean(tabelle1$gruppe.2)
m3 <- mean(tabelle1$gruppe.3)
(m1-mg)^2 + (m2-mg)^2 + (m3-mg)^2
(mg-c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))^2
sum(mg-c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))^2
sum(mg-c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3)^2)
sum((mg-c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))^2)
ssy <- sum((mg-c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))^2)
ssy
sse <- 157.375
ssa = ssy-sse
ssa
(m1-mg)^2 + (m2-mg)^2 + (m3-mg)^2
sum((m1 - tabelle1$gruppe.1)^2 + (m2 - tabelle1$gruppe.2)^2 + (m3 - tabelle1$gruppe.3)^2)
I <- 3
dfa <- I - 1
msa = ssa/dfa
msa
n <- length(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))
n
n <- length(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3)) - 3
I <- 3
n <- length(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3)) - 3
dfa = I - 1
dfe = n - I
msa = ssa/dfa
msa
mse = sse/dfe
mse
f = msa/mse
f
?pf
p = 1-pf(f, dfa, dfe)
p
?aov
aov(data = pm10.grouped)
View(tabelle1)
aov(gruppe.1~gruppe.2~gruppe3, pm10.grouped)
aov(gruppe.1~gruppe.2~gruppe.3, pm10.grouped)
aov(gruppe.1~gruppe.2, pm10.grouped)
View(pm10.grouped)
aov(PM10~station, pm10.grouped)
summary(aov(PM10~station, pm10.grouped))
summary(aov(gruppe.1~gruppe.2~gruppe.3, tabelle1))
pm10 = read.csv("pm10.txt", header = T, sep = "")
t.test(pm10$VMUE, pm10$VMSS, paired = T, var.equal = TRUE, conf.level = 0.95)
pm10.diff <- pm10$VMUE - pm10$VMSS
t.test(pm10.diff, conf.level = 0.95)
load("pm10short.rdata")
View(pm10short)
aov(VMSS~day, pm10.short)
aov(VMSS~day, pm10short)
summary(aov(VMSS~day, pm10short))
summary(aov(VMUE~day, pm10short))
View(tabelle1)
summary(aov(PM10~station, pm10.grouped))
sse
dfa
dfe
n <- length(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3)) - 3
n
t.test(pm10$VMUE, pm10$VMSS, paired = T, var.equal = TRUE, conf.level = 0.95)
t.test(x=pm10$VMUE, y=pm10$VMSS, paired = T, var.equal = TRUE, conf.level = 0.95)
t.test(x=pm10$VMUE, y=pm10$VMSS, var.equal = TRUE, conf.level = 0.95)
t.test(pm10.diff, conf.level = 0.95)
mg
View(tabelle1)
mean(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))
c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3)
8+12+7+10+11+12+13+9+7+9+15+13+11+16+12+8+4+5+6+3+8+10+3+9
221/24
View(iris)
data("iris")
subset_full<-iris[iris$Species=="versicolor", ]
LM.all = lm(Petal.Width ~ Petal.Length, subset_full)
pred.plim <- predict(LM.all, interval = "prediction")
pred.clim <- predict(LM.all, interval = "confidence")
plot(Petal.Width ~ Petal.Length, subset_full)
abline(LM.all)
points(subset_full$Petal.Length, pred.clim[ , "lwr"], col = 3, pch = "_")
points(subset_full$Petal.Length, pred.clim[ , "upr"], col = 3, pch = "_")
points(subset_full$Petal.Length, pred.plim[ , "lwr"], col = 4, pch = "_")
points(subset_full$Petal.Length, pred.plim[ , "upr"], col = 4, pch = "_")
I <- 3
n <- length(c(tabelle1$gruppe.1, tabelle1$gruppe.2, tabelle1$gruppe.3))
dfa = I - 1
dfe = n - I
msa = ssa/dfa
msa
mse = sse/dfe
mse
f = msa/mse
f
p = 1-pf(f, dfa, dfe)
p
View(iris)
plot(x=iris$Petal.Length, y=iris$Sepal.Width)
View(iris)
library(sp)
data(meuse)
library(sp)
data(meuse)
View(meuse)
lm(meuse$lead ~ meuse$dist + meuse$om)
lm(meuse$lead ~ meuse$dist + meuse$elev)
predict?
?predict
predict(lm(meuse$lead ~ meuse$dist + meuse$elev))
539.32+208.44*0.2-41.14*8
lm(lead ~ dist + elev)
lm(meuse$lead ~ meuse$dist)
lm(lead ~dist + elev,meuse)
model_3 <- lm(lead~dist+elev+dist:lead, meuse)
model_3
model_3
model_3 <- lm(lead~dist+elev+dist*elev, meuse)
model_3
model_1 <- lm(lead ~dist + elev,meuse)
predict(model_1,data.frame(meuse$dist = 0.2, meuse$elev = 8))
predict(model_1,data.frame(dist = 0.2, elev = 8))
model_1 <- lm(lead ~dist + elev,meuse)
predict(model_1,data.frame(dist = 0.2, elev = 8))
model_1 <- lm(lead ~dist + elev,meuse)
model_3 <- lm(lead~dist+elev+dist:elev, meuse)
model_3
summary(aov(length~species, plants))
summary(aov(PM10~station, pm10.grouped))
plot(x=iris$Petal.Length, y=iris$Sepal.Width)
data("iris")
iris[]
subset_full<-iris[iris$Species=="versicolor", ]
LM.all = lm(Petal.Width ~ Petal.Length, subset_full)
pred.plim <- predict(LM.all, interval = "prediction")
pred.clim <- predict(LM.all, interval = "confidence")
plot(Petal.Width ~ Petal.Length, subset_full)
abline(LM.all)
points(subset_full$Petal.Length, pred.clim[ , "lwr"], col = 3, pch = "_")
points(subset_full$Petal.Length, pred.clim[ , "upr"], col = 3, pch = "_")
points(subset_full$Petal.Length, pred.plim[ , "lwr"], col = 4, pch = "_")
points(subset_full$Petal.Length, pred.plim[ , "upr"], col = 4, pch = "_")
x = function(image){
setwd("D:/Dokumente/Studium/5 FS/Geosoftware II/geosoft-II/public/temporaererDatenspeicher")
cat(image, file="base.txt")
decode("base.txt", "output.tif")
tif <- rast("output.tif")
png("sentinel.png")
plotRGB(tif, b=3, g=2, r=1, stretch="lin")
dev.off()
return ("hallo")
}
getwd()
print(getwd())
getSrcDirectory()[1]
getSrcDirectory()
?getSrcDirectory()
getSrcDirectory()[1]
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
print(getwd())
install.packages("rstudioapi")
setwd(dirname(getActiveDocumentContext()$path))
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
return(getwd())
setwd(dirname(getActiveDocumentContext()$path))
getwd()
print(getwd())
me(getActiveDocumentContext()$path))
setwd(dirname(getActiveDocumentContext()$path))
print(getwd())
b64 <- img_to_binbase("sentinelRaster2.tif")
library(base64)
library(terra)
library(rstudioapi)
library(daiR)
b64 <- img_to_binbase("sentinelRaster2.tif")
setwd("D:/Dokumente/Studium/5 FS/Geosoftware II/geosoft-II/public/temporaererDatenspeicher")
b64 <- img_to_binbase("../beispieldaten/sentinelRaster2.tif")
rawcon <- rawConnection(raw(), "w")
decode("base64.txt", rawcon)
decode("tmp64.txt", rawcon)
decode("tmp.txt", rawcon)
output <- rawConnectionValue(rawcon)
close(rawcon)
output
decode(b64, rawcon)
rawcon <- rawConnection(raw(), "w")
decode(b64, rawcon)
?decode
